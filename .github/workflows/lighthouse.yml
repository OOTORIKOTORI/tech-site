name: lighthouse

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0' # 09:00 JST (UTC+9)

permissions:
  contents: read

concurrency:
  group: lighthouse-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lh:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        preset: [desktop, mobile]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Warm up homepage
        if: ${{ matrix.preset == 'desktop' }}
        continue-on-error: true
        run: |
          set -Eeuo pipefail
          base="${SITE_ORIGIN:-https://migakiexplorer.jp}"
          ua="gh-actions-warmup"
          # 候補URL（軽い順）。1つでも成功したら成功扱い。
          candidates=(
            "$base/api/health"
            "$base/"
          )
          try() { curl -fsSIL --max-time 20 --connect-timeout 10 -A "$ua" "$1" -w " HTTP %{http_code}\n" ; }
          for attempt in 1 2 3 4 5; do
            for u in "${candidates[@]}"; do
              echo "Attempt $attempt: default -> $u"
              if try "$u"; then exit 0; fi
              echo "Attempt $attempt: force IPv4 + TLS1.2 -> $u"
              if curl -fsSIL -4 --tlsv1.2 --max-time 20 --connect-timeout 10 -A "$ua" "$u" -w " HTTP %{http_code}\n" ; then
                exit 0
              fi
            done
            sleep $((attempt*2))
          done
          echo "::warning::Warm-up failed after retries; continuing to Lighthouse"

      - name: Wait for production 200
        if: ${{ matrix.preset == 'desktop' }}
        run: |
          set -Eeuo pipefail
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" https://migakiexplorer.jp/ || true)
            echo "Attempt $i/30: status $code"
            if [ "$code" = "200" ]; then 
              echo "Production is ready (200)"
              break
            fi
            sleep 10
          done
          test "$code" = "200" || (echo "Production not ready after 5 minutes" && exit 1)

      - name: Audit migakiexplorer.jp (desktop)
        if: ${{ matrix.preset == 'desktop' }}
        run: |
          export LHCI_BUILD_CONTEXT__CURRENT_HASH="${GITHUB_SHA}"
          export LHCI_BUILD_CONTEXT__CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
          npx lhci autorun --config=.lighthouserc.desktop.json --upload.target=temporary-public-storage || \
          (echo "LHCI failed, retrying once..." && sleep 10 && npx lhci autorun --config=.lighthouserc.desktop.json --upload.target=temporary-public-storage)

      - name: Warm up homepage
        if: ${{ matrix.preset == 'mobile' }}
        continue-on-error: true
        run: |
          set -Eeuo pipefail
          base="${SITE_ORIGIN:-https://migakiexplorer.jp}"
          ua="gh-actions-warmup"
          # 候補URL（軽い順）。1つでも成功したら成功扱い。
          candidates=(
            "$base/api/health"
            "$base/"
          )
          try() { curl -fsSIL --max-time 20 --connect-timeout 10 -A "$ua" "$1" -w " HTTP %{http_code}\n" ; }
          for attempt in 1 2 3 4 5; do
            for u in "${candidates[@]}"; do
              echo "Attempt $attempt: default -> $u"
              if try "$u"; then exit 0; fi
              echo "Attempt $attempt: force IPv4 + TLS1.2 -> $u"
              if curl -fsSIL -4 --tlsv1.2 --max-time 20 --connect-timeout 10 -A "$ua" "$u" -w " HTTP %{http_code}\n" ; then
                exit 0
              fi
            done
            sleep $((attempt*2))
          done
          echo "::warning::Warm-up failed after retries; continuing to Lighthouse"

      - name: Wait for production 200
        if: ${{ matrix.preset == 'mobile' }}
        run: |
          set -Eeuo pipefail
          for i in {1..30}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" https://migakiexplorer.jp/ || true)
            echo "Attempt $i/30: status $code"
            if [ "$code" = "200" ]; then 
              echo "Production is ready (200)"
              break
            fi
            sleep 10
          done
          test "$code" = "200" || (echo "Production not ready after 5 minutes" && exit 1)

      - name: Audit migakiexplorer.jp (mobile)
        if: ${{ matrix.preset == 'mobile' }}
        run: |
          export LHCI_BUILD_CONTEXT__CURRENT_HASH="${GITHUB_SHA}"
          export LHCI_BUILD_CONTEXT__CURRENT_BRANCH="${GITHUB_REF#refs/heads/}"
          export LHCI_EMULATE_FORM_FACTOR="mobile"
          npx lhci autorun --config=.lighthouserc.mobile.json --upload.target=temporary-public-storage || \
          (echo "LHCI failed, retrying once..." && sleep 10 && npx lhci autorun --config=.lighthouserc.mobile.json --upload.target=temporary-public-storage)
